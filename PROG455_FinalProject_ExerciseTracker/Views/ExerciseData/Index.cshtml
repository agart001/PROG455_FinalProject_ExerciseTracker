@using Newtonsoft.Json.Linq;
@model PROG455_FinalProject_ExerciseTracker.Models.IExerciseData

@{
    var datatype = ViewData["DataType"] as string;
    ViewData["Title"] = "Index";
    var model_data_token = JObject.FromObject(Model.Data).ToString();
}

<h1>Index</h1>

<p>
    @Html.ActionLink("Add Data", "Create", new { type = datatype }) | @Html.ActionLink("View Graph", "Index", "Graph", new { token = model_data_token })
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Date
            </th>
            @switch (datatype)
            {
                case "Reps":
                    <th>
                        Sets
                    </th>
                    <th>
                        Reps
                    </th>
                    break;
                case "Timed":
                    <th>
                        Time
                    </th>
                    break;
                default:
                    <th>
                        Value
                    </th>
                    break;
            }
            <th></th>
        </tr>
    </thead>
    <tbody>
        <tr>
            @foreach (var item in Model.Data)
            {
                var item_token = string.Empty;
                <td>
                    @Html.DisplayFor(modelItem => item.Key)
                </td>
                @switch (datatype)
                {
                    case "Reps":
                        var cast = (Tuple<int, int>)item.Value;
                        item_token = JObject.FromObject(new ExerciseDataForm<Tuple<int, int>> 
                            { 
                                Date = item.Key, 
                                Data = cast
                            }).ToString();
                        <td>
                            @Html.DisplayFor(modelItem => cast.Item1)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => cast.Item2)
                        </td>
                        break;
                    case "Timed":
                        item_token = JObject.FromObject(new ExerciseDataForm<TimeSpan>
                        {
                            Date = item.Key,
                            Data = item.Value
                        }).ToString();
                        var tspan = (TimeSpan)item.Value;
                        var formatted = tspan.ToString(@"mm\:ss");
                        <td>
                            @Html.DisplayFor(modelItem => formatted)
                        </td>
                        break;
                    default:
                        item_token = JObject.FromObject(new ExerciseDataForm<string>
                        {
                            Date = item.Key,
                            Data = item.Value
                        }).ToString();
                        <td>
                            @Html.DisplayFor(modelItem => item.Value)
                        </td>
                        break;
                }
                <td>
                    @Html.ActionLink("Edit", "Edit", new { token = item_token }) |
                    @Html.ActionLink("Delete", "Delete", new { token = item_token })
                </td>
            }
        </tr>
    </tbody>
</table>
